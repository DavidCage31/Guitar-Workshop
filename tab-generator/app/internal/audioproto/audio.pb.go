// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: audio.proto

package audioproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioPath     string                 `protobuf:"bytes,1,opt,name=audio_path,json=audioPath,proto3" json:"audio_path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioRequest) Reset() {
	*x = AudioRequest{}
	mi := &file_audio_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRequest) ProtoMessage() {}

func (x *AudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRequest.ProtoReflect.Descriptor instead.
func (*AudioRequest) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{0}
}

func (x *AudioRequest) GetAudioPath() string {
	if x != nil {
		return x.AudioPath
	}
	return ""
}

type AudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pitches       []float32              `protobuf:"fixed32,1,rep,packed,name=pitches,proto3" json:"pitches,omitempty"`              // Основная частота (Гц)
	Times         []float32              `protobuf:"fixed32,2,rep,packed,name=times,proto3" json:"times,omitempty"`                  // Временные метки (сек)
	Chromagram    []byte                 `protobuf:"bytes,3,opt,name=chromagram,proto3" json:"chromagram,omitempty"`                 // Хромаграмма
	Tempo         float32                `protobuf:"fixed32,4,opt,name=tempo,proto3" json:"tempo,omitempty"`                         // Темп
	Sr            float32                `protobuf:"fixed32,5,opt,name=sr,proto3" json:"sr,omitempty"`                               // Частота дискретизации
	HopLength     int32                  `protobuf:"varint,6,opt,name=hop_length,json=hopLength,proto3" json:"hop_length,omitempty"` // Шаг
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioResponse) Reset() {
	*x = AudioResponse{}
	mi := &file_audio_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioResponse) ProtoMessage() {}

func (x *AudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_audio_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioResponse.ProtoReflect.Descriptor instead.
func (*AudioResponse) Descriptor() ([]byte, []int) {
	return file_audio_proto_rawDescGZIP(), []int{1}
}

func (x *AudioResponse) GetPitches() []float32 {
	if x != nil {
		return x.Pitches
	}
	return nil
}

func (x *AudioResponse) GetTimes() []float32 {
	if x != nil {
		return x.Times
	}
	return nil
}

func (x *AudioResponse) GetChromagram() []byte {
	if x != nil {
		return x.Chromagram
	}
	return nil
}

func (x *AudioResponse) GetTempo() float32 {
	if x != nil {
		return x.Tempo
	}
	return 0
}

func (x *AudioResponse) GetSr() float32 {
	if x != nil {
		return x.Sr
	}
	return 0
}

func (x *AudioResponse) GetHopLength() int32 {
	if x != nil {
		return x.HopLength
	}
	return 0
}

var File_audio_proto protoreflect.FileDescriptor

const file_audio_proto_rawDesc = "" +
	"\n" +
	"\vaudio.proto\x12\x05audio\"-\n" +
	"\fAudioRequest\x12\x1d\n" +
	"\n" +
	"audio_path\x18\x01 \x01(\tR\taudioPath\"\xa4\x01\n" +
	"\rAudioResponse\x12\x18\n" +
	"\apitches\x18\x01 \x03(\x02R\apitches\x12\x14\n" +
	"\x05times\x18\x02 \x03(\x02R\x05times\x12\x1e\n" +
	"\n" +
	"chromagram\x18\x03 \x01(\fR\n" +
	"chromagram\x12\x14\n" +
	"\x05tempo\x18\x04 \x01(\x02R\x05tempo\x12\x0e\n" +
	"\x02sr\x18\x05 \x01(\x02R\x02sr\x12\x1d\n" +
	"\n" +
	"hop_length\x18\x06 \x01(\x05R\thopLength2J\n" +
	"\rAudioAnalyzer\x129\n" +
	"\fProcessAudio\x12\x13.audio.AudioRequest\x1a\x14.audio.AudioResponseB\x15Z\x13internal/audioprotob\x06proto3"

var (
	file_audio_proto_rawDescOnce sync.Once
	file_audio_proto_rawDescData []byte
)

func file_audio_proto_rawDescGZIP() []byte {
	file_audio_proto_rawDescOnce.Do(func() {
		file_audio_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_audio_proto_rawDesc), len(file_audio_proto_rawDesc)))
	})
	return file_audio_proto_rawDescData
}

var file_audio_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_audio_proto_goTypes = []any{
	(*AudioRequest)(nil),  // 0: audio.AudioRequest
	(*AudioResponse)(nil), // 1: audio.AudioResponse
}
var file_audio_proto_depIdxs = []int32{
	0, // 0: audio.AudioAnalyzer.ProcessAudio:input_type -> audio.AudioRequest
	1, // 1: audio.AudioAnalyzer.ProcessAudio:output_type -> audio.AudioResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_audio_proto_init() }
func file_audio_proto_init() {
	if File_audio_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_audio_proto_rawDesc), len(file_audio_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_audio_proto_goTypes,
		DependencyIndexes: file_audio_proto_depIdxs,
		MessageInfos:      file_audio_proto_msgTypes,
	}.Build()
	File_audio_proto = out.File
	file_audio_proto_goTypes = nil
	file_audio_proto_depIdxs = nil
}
