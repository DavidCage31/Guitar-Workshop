// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: fx_processor.proto

package fxprocessorproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AudioEffect int32

const (
	AudioEffect_DISTORTION AudioEffect = 0
	AudioEffect_REVERB     AudioEffect = 1
	AudioEffect_DELAY      AudioEffect = 2
)

// Enum value maps for AudioEffect.
var (
	AudioEffect_name = map[int32]string{
		0: "DISTORTION",
		1: "REVERB",
		2: "DELAY",
	}
	AudioEffect_value = map[string]int32{
		"DISTORTION": 0,
		"REVERB":     1,
		"DELAY":      2,
	}
)

func (x AudioEffect) Enum() *AudioEffect {
	p := new(AudioEffect)
	*p = x
	return p
}

func (x AudioEffect) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AudioEffect) Descriptor() protoreflect.EnumDescriptor {
	return file_fx_processor_proto_enumTypes[0].Descriptor()
}

func (AudioEffect) Type() protoreflect.EnumType {
	return &file_fx_processor_proto_enumTypes[0]
}

func (x AudioEffect) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AudioEffect.Descriptor instead.
func (AudioEffect) EnumDescriptor() ([]byte, []int) {
	return file_fx_processor_proto_rawDescGZIP(), []int{0}
}

type AudioRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Audio         []byte                 `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Effect        AudioEffect            `protobuf:"varint,2,opt,name=effect,proto3,enum=fxp.AudioEffect" json:"effect,omitempty"`
	Params        map[string]float32     `protobuf:"bytes,3,rep,name=params,proto3" json:"params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AudioRequest) Reset() {
	*x = AudioRequest{}
	mi := &file_fx_processor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioRequest) ProtoMessage() {}

func (x *AudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fx_processor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioRequest.ProtoReflect.Descriptor instead.
func (*AudioRequest) Descriptor() ([]byte, []int) {
	return file_fx_processor_proto_rawDescGZIP(), []int{0}
}

func (x *AudioRequest) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

func (x *AudioRequest) GetEffect() AudioEffect {
	if x != nil {
		return x.Effect
	}
	return AudioEffect_DISTORTION
}

func (x *AudioRequest) GetParams() map[string]float32 {
	if x != nil {
		return x.Params
	}
	return nil
}

type AudioResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProcessedAudio []byte                 `protobuf:"bytes,1,opt,name=processed_audio,json=processedAudio,proto3" json:"processed_audio,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *AudioResponse) Reset() {
	*x = AudioResponse{}
	mi := &file_fx_processor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioResponse) ProtoMessage() {}

func (x *AudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fx_processor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioResponse.ProtoReflect.Descriptor instead.
func (*AudioResponse) Descriptor() ([]byte, []int) {
	return file_fx_processor_proto_rawDescGZIP(), []int{1}
}

func (x *AudioResponse) GetProcessedAudio() []byte {
	if x != nil {
		return x.ProcessedAudio
	}
	return nil
}

var File_fx_processor_proto protoreflect.FileDescriptor

const file_fx_processor_proto_rawDesc = "" +
	"\n" +
	"\x12fx_processor.proto\x12\x03fxp\"\xc0\x01\n" +
	"\fAudioRequest\x12\x14\n" +
	"\x05audio\x18\x01 \x01(\fR\x05audio\x12(\n" +
	"\x06effect\x18\x02 \x01(\x0e2\x10.fxp.AudioEffectR\x06effect\x125\n" +
	"\x06params\x18\x03 \x03(\v2\x1d.fxp.AudioRequest.ParamsEntryR\x06params\x1a9\n" +
	"\vParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"8\n" +
	"\rAudioResponse\x12'\n" +
	"\x0fprocessed_audio\x18\x01 \x01(\fR\x0eprocessedAudio*4\n" +
	"\vAudioEffect\x12\x0e\n" +
	"\n" +
	"DISTORTION\x10\x00\x12\n" +
	"\n" +
	"\x06REVERB\x10\x01\x12\t\n" +
	"\x05DELAY\x10\x022C\n" +
	"\vFXProcessor\x124\n" +
	"\fProcessAudio\x12\x11.fxp.AudioRequest\x1a\x11.fxp.AudioRequestB\x1bZ\x19internal/fxprocessorprotob\x06proto3"

var (
	file_fx_processor_proto_rawDescOnce sync.Once
	file_fx_processor_proto_rawDescData []byte
)

func file_fx_processor_proto_rawDescGZIP() []byte {
	file_fx_processor_proto_rawDescOnce.Do(func() {
		file_fx_processor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_fx_processor_proto_rawDesc), len(file_fx_processor_proto_rawDesc)))
	})
	return file_fx_processor_proto_rawDescData
}

var file_fx_processor_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_fx_processor_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_fx_processor_proto_goTypes = []any{
	(AudioEffect)(0),      // 0: fxp.AudioEffect
	(*AudioRequest)(nil),  // 1: fxp.AudioRequest
	(*AudioResponse)(nil), // 2: fxp.AudioResponse
	nil,                   // 3: fxp.AudioRequest.ParamsEntry
}
var file_fx_processor_proto_depIdxs = []int32{
	0, // 0: fxp.AudioRequest.effect:type_name -> fxp.AudioEffect
	3, // 1: fxp.AudioRequest.params:type_name -> fxp.AudioRequest.ParamsEntry
	1, // 2: fxp.FXProcessor.ProcessAudio:input_type -> fxp.AudioRequest
	1, // 3: fxp.FXProcessor.ProcessAudio:output_type -> fxp.AudioRequest
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_fx_processor_proto_init() }
func file_fx_processor_proto_init() {
	if File_fx_processor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_fx_processor_proto_rawDesc), len(file_fx_processor_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fx_processor_proto_goTypes,
		DependencyIndexes: file_fx_processor_proto_depIdxs,
		EnumInfos:         file_fx_processor_proto_enumTypes,
		MessageInfos:      file_fx_processor_proto_msgTypes,
	}.Build()
	File_fx_processor_proto = out.File
	file_fx_processor_proto_goTypes = nil
	file_fx_processor_proto_depIdxs = nil
}
